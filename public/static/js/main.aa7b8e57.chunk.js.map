{"version":3,"sources":["components/Login.js","components/Measurements.js","components/SignUp.js","components/Header.js","components/MembersPage.js","components/AccountManagement.js","App.js","index.js"],"names":["Login","loginUrl","setUser","user","navigate","useNavigate","useState","username","password","input","setInput","handleLogin","e","attr","target","name","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","ok","json","console","log","id","autocomplete","onSubmit","className","required","type","placeholder","onChange","onclick","to","Measurements","metricsUrl","neck_size","chest_size","waist_size","hip_size","thigh_size","calf_size","bicep_size","forearm_size","height_feet","height_inches","weight_lbs","user_id","submitted","setSubmitted","handleChange","autoComplete","alert","step","hips_size","pattern","ste","SignUp","signUpUrl","onLogin","first_name","last_name","birthdate","r","Header","logOutUrl","a","onClick","MembersPage","memberUrl","metrics","userData","setUserData","removed","setRemoved","handleClick","filter","metric","useEffect","response","data","userMetrics","map","created","created_at","split","AccountManagement","userUrl","editPassword","setEditPassword","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa7b8e57.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction Login({ loginUrl, setUser, user }) {\n  const navigate = useNavigate();\n  const [input, setInput] = useState({\n    username: '',\n    password: '',\n  });\n\n  const handleLogin = (e) => {\n    let attr = e.target.name;\n    setInput({ ...input, [attr]: e.target.value });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`${loginUrl}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        username: input.username,\n        password: input.password,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        res.json().then((user) => setUser(user));\n        navigate('/measurements');\n      } else {\n        setInput({\n          username: '',\n          password: '',\n        });\n      }\n    });\n    console.log('Login.js user', user);\n  }\n\n  return (\n    <div id='login_box'>\n      <h1>Login</h1>\n      <form id='user_login' autocomplete='off' onSubmit={handleSubmit}>\n        <h4 className='login_descriptor'>Username</h4>\n        <input\n          required\n          value={input.username}\n          type='text'\n          className='login_input_fields'\n          id='username_field'\n          name='username'\n          placeholder='Username'\n          onChange={handleLogin}\n        />\n        <br />\n        <h4 className='login_descriptor'>Password</h4>\n        <input\n          required\n          value={input.password}\n          type='password'\n          className='login_input_fields'\n          id='password_field'\n          name='password'\n          placeholder='Password'\n          onChange={handleLogin}\n        />\n        <br />\n        <span>\n          <button id='sign_in_button' onclick={handleSubmit}>\n            Sign In\n          </button>\n          <Link id='sign_up' to='/signup'>\n            Sign Up\n          </Link>\n        </span>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Navigate, Link } from 'react-router-dom';\n\nfunction Measurements({ metricsUrl, user }) {\n  const [input, setInput] = useState({\n    neck_size: '',\n    chest_size: '',\n    waist_size: '',\n    hip_size: '',\n    thigh_size: '',\n    calf_size: '',\n    bicep_size: '',\n    forearm_size: '',\n    height_feet: '',\n    height_inches: '',\n    weight_lbs: '',\n    user_id: user.id,\n  });\n\n  const [submitted, setSubmitted] = useState(false);\n\n  console.log('Measurements.js user', user);\n  console.log('Measurements.js input', input);\n\n  const handleChange = (e) => {\n    let attr = e.target.name;\n    setInput({ ...input, [attr]: e.target.value });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (\n      input.neck_size ||\n      input.chest_size ||\n      input.waist_size ||\n      input.hip_size ||\n      input.thigh_size ||\n      input.calf_size ||\n      input.bicep_size ||\n      input.forearm_size ||\n      input.height_feet ||\n      input.height_inches ||\n      input.weight_lbs\n    ) {\n      fetch(`${metricsUrl}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          neck_size: input.neck_size,\n          chest_size: input.chest_size,\n          waist_size: input.waist_size,\n          hip_size: input.hip_size,\n          thigh_size: input.thigh_size,\n          calf_size: input.calf_size,\n          bicep_size: input.bicep_size,\n          forearm_size: input.forearm_size,\n          height_feet: input.height_feet,\n          height_inches: input.height_inches,\n          weight_lbs: input.weight_lbs,\n          user_id: user.id,\n        }),\n      }).then(() => {\n        setInput({\n          neck_size: '',\n          chest_size: '',\n          waist_size: '',\n          hip_size: '',\n          thigh_size: '',\n          calf_size: '',\n          bicep_size: '',\n          forearm_size: '',\n          height_feet: '',\n          height_inches: '',\n          weight_lbs: '',\n          user_id: user.id,\n        });\n      });\n      setSubmitted(true);\n    } else {\n      alert('Please fill out at least one field');\n    }\n  }\n\n  if (submitted) return <Navigate to='/memberspage' />;\n\n  return (\n    <>\n      <Link id='skip' to='/memberspage'>\n        Skip\n      </Link>\n      <div id='measurements_box'>\n        <h1 id='measurements_text'>Measurements</h1>\n        <form id='measurement_form' autoComplete='off' onSubmit={handleSubmit}>\n          <h4 className='measurements_descriptor'>\n            Circumference of neck in inches?\n          </h4>\n          <input\n            value={input.neck_size}\n            type='number'\n            step='0.25'\n            className='measurement_fields'\n            id='neck_size_field'\n            name='neck_size'\n            placeholder='Neck size'\n            onChange={handleChange}\n          />\n          <br />\n          <h4 className='measurements_descriptor'>\n            Circumference of chest in inches?\n          </h4>\n          <input\n            value={input.chest_size}\n            type='number'\n            step='0.25'\n            className='measurement_fields'\n            id='chest_size_field'\n            name='chest_size'\n            placeholder='Chest size'\n            onChange={handleChange}\n          />\n          <br />\n          <h4 className='measurements_descriptor'>\n            Circumference of waist in inches?\n          </h4>\n          <input\n            value={input.waist_size}\n            type='number'\n            step='0.25'\n            className='measurement_fields'\n            id='waist_size'\n            name='waist_size'\n            placeholder='Waist'\n            onChange={handleChange}\n          />\n          <br />\n          <h4 className='measurements_descriptor'>\n            Circumference of hips in inches?\n          </h4>\n          <input\n            value={input.hips_size}\n            type='number'\n            step='0.25'\n            className='measurement_fields'\n            id='hips_size_field'\n            name='hips_size'\n            placeholder='Hips'\n            onChange={handleChange}\n          />\n          <br />\n          <h4 className='measurements_descriptor'>\n            Circumference of thighs in inches?\n          </h4>\n          <input\n            value={input.thigh_size}\n            type='number'\n            step='0.25'\n            className='measurement_fields'\n            id='thigh_size_field'\n            name='thigh_size'\n            placeholder='Thighs'\n            onChange={handleChange}\n          />\n          <br />\n          <h4 className='measurements_descriptor'>\n            Circumference of calf in inches?\n          </h4>\n          <input\n            value={input.calf_size}\n            type='number'\n            step='0.25'\n            className='measurement_fields'\n            id='calf_size_field'\n            name='calf_size'\n            placeholder='Calf'\n            onChange={handleChange}\n          />\n          <br />\n          <h4 className='measurements_descriptor'>\n            Circumference of bicep in inches?\n          </h4>\n          <input\n            value={input.bicep_size}\n            type='number'\n            step='0.25'\n            className='measurement_fields'\n            id='bicep_size_field'\n            name='bicep_size'\n            placeholder='Bicep'\n            onChange={handleChange}\n          />\n          <br />\n          <h4 className='measurements_descriptor'>\n            Circumference of forearm in inches?\n          </h4>\n          <input\n            value={input.forearm_size}\n            type='number'\n            step='0.25'\n            className='measurement_fields'\n            id='forearm_size_field'\n            name='forearm_size'\n            placeholder='Forearm'\n            onChange={handleChange}\n          />\n          <br />\n          <h4 className='measurements_descriptor'>What's your height?</h4>\n          <input\n            value={input.height_feet}\n            type='number'\n            step='1'\n            pattern='\\d+'\n            className='measurement_fields'\n            id='height_feet_field'\n            name='height_feet'\n            placeholder='Feet'\n            onChange={handleChange}\n          />\n          <br />\n          <input\n            value={input.height_inches}\n            type='number'\n            step='1'\n            pattern='\\d+'\n            className='measurement_fields'\n            id='height_inches_field'\n            name='height_inches'\n            placeholder='Inches'\n            onChange={handleChange}\n          />\n          <br />\n          <h4 className='measurements_descriptor'>\n            What's your weight in Lbs?\n          </h4>\n          <input\n            value={input.weight_lbs}\n            type='number'\n            ste='0.01'\n            className='measurement_fields'\n            id='weight_lbs_field'\n            name='weight_lbs'\n            placeholder='Weight'\n            onChange={handleChange}\n          />\n          <br />\n          <input type='submit' value='Submit' id='submit_measurement_button' />\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default Measurements;\n","import React, { useState } from 'react';\nimport Measurements from './Measurements';\nimport { useNavigate } from 'react-router-dom';\n\nfunction SignUp({ signUpUrl, user, onLogin, metricsUrl }) {\n  const navigate = useNavigate();\n  const [input, setInput] = useState({\n    first_name: '',\n    last_name: '',\n    birthdate: '',\n    username: '',\n    password: '',\n  });\n\n  const handleChange = (e) => {\n    let attr = e.target.name;\n    setInput({ ...input, [attr]: e.target.value });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`${signUpUrl}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user: {\n          first_name: input.first_name,\n          last_name: input.last_name,\n          birthdate: input.birthdate,\n          username: input.username,\n          password: input.password,\n        },\n      }),\n    })\n      .then((r) => {\n        if (r.ok) {\n          r.json().then((user) => onLogin(user));\n        }\n      })\n      .then(() => {\n        setInput({\n          first_name: '',\n          last_name: '',\n          birthdate: '',\n          username: '',\n          password: '',\n        });\n        navigate('/measurements');\n      });\n    console.log('SignUp.js user', user);\n  }\n\n  // if (user.id) return <Measurements metricsUrl={metricsUrl} user={user} />;\n\n  return (\n    <div id='sign_up_box'>\n      <h1 id='join_text'>Join</h1>\n      <form id='sign_up_form' autocomplete='off' onSubmit={handleSubmit}>\n        <h4 className='sign_up_descriptor'>First name</h4>\n        <input\n          required\n          value={input.first_name}\n          type='text'\n          className='sign_up_input_fields'\n          id='first_name_field'\n          name='first_name'\n          placeholder='First Name'\n          onChange={handleChange}\n        />\n        <br />\n        <h4 className='sign_up_descriptor'>Last name</h4>\n        <input\n          required\n          value={input.last_name}\n          type='text'\n          className='sign_up_input_fields'\n          id='last_name_field'\n          name='last_name'\n          placeholder='Last Name'\n          onChange={handleChange}\n        />\n        <br />\n        <h4 className='sign_up_descriptor'>Date of birth</h4>\n        <input\n          required\n          value={input.birthdate}\n          type='date'\n          className='sign_up_input_fields'\n          id='birthdate_field'\n          name='birthdate'\n          placeholder='Date of Birth'\n          onChange={handleChange}\n        />\n        <br />\n        <h4 className='sign_up_descriptor'>Username</h4>\n        <input\n          required\n          value={input.username}\n          type='text'\n          className='sign_up_input_fields'\n          id='username_field'\n          name='username'\n          placeholder='Username'\n          onChange={handleChange}\n        />\n        <br />\n        <h4 className='sign_up_descriptor'>Password</h4>\n        <input\n          required\n          value={input.password}\n          type='password'\n          className='sign_up_input_fields'\n          id='password_field'\n          name='password'\n          placeholder='Password'\n          onChange={handleChange}\n        />\n        <br />\n        <input id='submit_button' type='submit' value='Submit' />\n      </form>\n    </div>\n  );\n}\n\nexport default SignUp;\n","import React from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n\nfunction Header({ setUser, logOutUrl, user }) {\n  const navigate = useNavigate();\n\n  async function handleLogout() {\n    await fetch(`${logOutUrl}`, { method: 'DELETE' }).then((r) => {\n      if (r.ok) {\n        setUser(null);\n        // navigateToHome();\n        navigate('/');\n      }\n    });\n    console.log('Empty user check', user);\n  }\n\n  return (\n    <div className='header'>\n      <Link className='header_link' to='/accountmanagement'>\n        Manage Account\n      </Link>\n      <button\n        className='header_link'\n        id='log_out_button'\n        onClick={handleLogout}\n      >\n        Sign Out\n      </button>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\n\nfunction MembersPage({ memberUrl, metricsUrl }) {\n  const [userData, setUserData] = useState({ metrics: [] });\n  const [removed, setRemoved] = useState(false);\n\n  function handleClick(e) {\n    fetch(`${metricsUrl}${e.target.value}`, { method: 'DELETE' });\n    setUserData({\n      metrics: userData.metrics.filter(\n        (metric) => metric.id !== e.target.value\n      ),\n    });\n    setRemoved(true);\n  }\n\n  useEffect(() => {\n    fetch(`${memberUrl}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setUserData(data);\n      });\n  }, [removed]);\n\n  const userMetrics = userData.metrics.map((user) => {\n    const created = user.created_at.split('T')[0];\n    if (\n      !user.neck_size &&\n      !user.hips_size &&\n      !user.bicep_size &&\n      !user.chest_size &&\n      !user.calf_size &&\n      !user.thigh_size &&\n      !user.waist_size &&\n      !user.weight_lbs &&\n      !user.forearm_size &&\n      !user.height_feet\n    ) {\n      return null;\n    } else {\n      return (\n        <>\n          <div className='user_metric_box' id={userData.metrics.id}>\n            <ul key={userData.metrics.id} className='metric_ul'>\n              {user.neck_size ? (\n                <li\n                  className='neck'\n                  id={`neck${user.id}`}\n                  key={`neck ${userData.metrics.id}`}\n                >\n                  <strong>Neck circumference:</strong> {user.neck_size}in\n                </li>\n              ) : null}\n              {user.chest_size ? (\n                <li\n                  className='chest'\n                  id={`chest${user.id}`}\n                  key={`chest ${userData.metrics.id}`}\n                >\n                  <strong>Chest circumference:</strong> {user.chest_size}in\n                </li>\n              ) : null}\n              {user.waist_size ? (\n                <li\n                  className='waist'\n                  id={user.id}\n                  key={`waist${userData.metrics.id}`}\n                >\n                  <strong>Waist circumference:</strong> {user.waist_size}in\n                </li>\n              ) : null}\n              {user.hip_size ? (\n                <li\n                  className='hip'\n                  id={user.id}\n                  key={`hip${userData.metrics.id}`}\n                >\n                  <strong>Hip circumference:</strong> {user.hip_size}in\n                </li>\n              ) : null}\n              {user.thigh_size ? (\n                <li\n                  className='thigh'\n                  id={user.id}\n                  key={`thigh${userData.metrics.id}`}\n                >\n                  <strong>Thigh circumference:</strong> {user.thigh_size}in\n                </li>\n              ) : null}\n              {user.calf_size ? (\n                <li\n                  className='calf'\n                  id={user.id}\n                  key={`calf${userData.metrics.id}`}\n                >\n                  <strong>Calf circumference:</strong> {user.calf_size}in\n                </li>\n              ) : null}\n              {user.bicep_size ? (\n                <li\n                  className='bicep'\n                  id={user.id}\n                  key={`bicep${userData.metrics.id}`}\n                >\n                  <strong>Bicep circumference:</strong> {user.bicep_size}in\n                </li>\n              ) : null}\n              {user.forearm_size ? (\n                <li\n                  className='forearm'\n                  id={user.id}\n                  key={`forearm${userData.metrics.id}`}\n                >\n                  <strong>Forearm circumference:</strong> {user.forearm_size}in\n                </li>\n              ) : null}\n              {user.height_feet ? (\n                <li\n                  className='height'\n                  id={user.id}\n                  key={`height${userData.metrics.id}`}\n                >\n                  <strong>Height:</strong> {user.height_feet}'{' '}\n                  {user.height_inches}\"\n                </li>\n              ) : null}\n              {user.weight_lbs ? (\n                <li\n                  className='weight'\n                  id={user.id}\n                  key={`weight${userData.metrics.id}`}\n                >\n                  <strong>Weight:</strong> {user.weight_lbs}lbs\n                </li>\n              ) : null}\n              <li\n                className='created'\n                id={user.id}\n                key={`created${userData.metrics.id}`}\n              >\n                <strong>Created:</strong>\n                {created}\n              </li>\n            </ul>\n            <button\n              className='remove_metric'\n              id={user.id}\n              value={user.id}\n              onClick={handleClick}\n            >\n              ❌\n            </button>\n          </div>\n        </>\n      );\n    }\n  });\n\n  return (\n    <div className='user_metrics'>\n      <div id='member_name'>\n        Member:{userData.first_name} {userData.last_name}\n      </div>\n      {removed ? (\n        <div className='removed_metric_box'>\n          Metric Removed! &nbsp;\n          <button className='remove_metric' onClick={() => setRemoved(false)}>\n            OK{' '}\n          </button>\n        </div>\n      ) : (\n        userMetrics\n      )}\n    </div>\n  );\n}\n\nexport default MembersPage;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AccountManagement({ user, userUrl }) {\n  const [editPassword, setEditPassword] = useState(false);\n  const navigate = useNavigate();\n  const [input, setInput] = useState({\n    user: user.id,\n    password: '',\n  });\n\n  function handleClick() {\n    setEditPassword(true);\n  }\n\n  const handleChange = (e) => {\n    let attr = e.target.name;\n    setInput({ ...input, [attr]: e.target.value });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(`${userUrl}${user.id}`, {\n      method: 'PATCH',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        user: user.id,\n        password: input.password,\n      }),\n    }).then((res) => {\n      if (res.ok) {\n        // res.json().then((user) => setUser(user));\n        navigate('/memberspage');\n      } else {\n        setInput({\n          password: '',\n        });\n      }\n    });\n  }\n\n  return (\n    <div id='manage_account_box'>\n      <div>\n        Welcome:{' '}\n        <strong>\n          {user.first_name} {user.last_name}\n        </strong>\n      </div>\n      {!editPassword ? (\n        <span>\n          <h3>Change password?</h3>\n          <button id='change_password_button' onClick={handleClick}>\n            Yes!\n          </button>\n        </span>\n      ) : (\n        <form autocomplete='off' onSubmit={handleSubmit}>\n          <input\n            required\n            value={input.password}\n            type='password'\n            className='login_input_fields'\n            id='password_field'\n            name='password'\n            placeholder='New Password'\n            onChange={handleChange}\n          />\n          <button id='change_password_button' onclick={handleSubmit}>\n            Change\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default AccountManagement;\n","import './App.css';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Measurements from './components/Measurements';\nimport Header from './components/Header';\nimport MembersPage from './components/MembersPage';\nimport AccountManagement from './components/AccountManagement';\n\nconst loginUrl = '/api/login';\nconst signUpUrl = '/api/signup';\nconst logOutUrl = '/api/logout';\nconst metricsUrl = '/api/metrics';\nconst memberUrl = '/api/me';\nconst userUrl = '/api/users/';\n\nfunction App() {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    // auto-login\n    fetch(`${memberUrl}`).then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n\n  console.log('app.js user', user);\n\n  return (\n    <div className='App'>\n      <Router>\n        <Routes>\n          <Route\n            exact\n            path='/'\n            element={\n              user && user.id ? (\n                <Measurements user={user} metricsUrl={metricsUrl} />\n              ) : (\n                <Login loginUrl={loginUrl} setUser={setUser} user={user} />\n              )\n            }\n          />\n\n          <Route\n            exact\n            path='/signup'\n            element={\n              <SignUp\n                signUpUrl={signUpUrl}\n                user={user}\n                onLogin={setUser}\n                metricsUrl={metricsUrl}\n              />\n            }\n          />\n          <Route\n            exact\n            path='/measurements'\n            element={\n              user && user.id ? (\n                <Measurements metricsUrl={metricsUrl} user={user} />\n              ) : (\n                <Login loginUrl={loginUrl} setUser={setUser} user={user} />\n              )\n            }\n          />\n          <Route\n            exact\n            path='/memberspage'\n            element={\n              user && user.id ? (\n                <>\n                  <Header setUser={setUser} user={user} logOutUrl={logOutUrl} />\n                  <MembersPage memberUrl={memberUrl} metricsUrl={metricsUrl} />\n                </>\n              ) : (\n                <Login loginUrl={loginUrl} setUser={setUser} user={user} />\n              )\n            }\n          />\n          <Route\n            exact\n            path='/accountmanagement'\n            element={\n              user && user.id ? (\n                <AccountManagement\n                  memberUrl={memberUrl}\n                  userUrl={userUrl}\n                  user={user}\n                  setUser={setUser}\n                />\n              ) : (\n                <Login loginUrl={loginUrl} setUser={setUser} user={user} />\n              )\n            }\n          />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}